@model ContactViewModel

@{
    ViewData["Title"] = "Contact";
}


<section class="contact">
    
    <div class="container">

            <div class="content">
                <p class="breadcrumb"><i class="fa-regular fa-home"></i> Home <img class="home-arrows" src="~/images/icons/double-arrows.svg" /><a asp-action="Contact" asp-controller="Default">Contact</a></p>
                <h1>Contact Us</h1>
                <div class="contact-box">
                    <img class="email-image" src="~/images/icons/mail-icon.svg"/>
                    <div class="contact-text">
                        <h4>Email Us</h4>
                        <p>Please feel free to drop us a line. We will respond as soon as possible.</p>
                        <a asp-action="Error" asp-controller="Default">
                            Leave a message 
                            <i class="fa-regular fa-arrow-right"></i>
                        </a>
                    </div>
                </div>
               <div class="contact-box">
                    <img class="careers-image" src="~/images/icons/careers-icon.svg" />
                    <div class="contact-text">
                        <h4>Careers</h4>
                        <p>Sit ac ipsum leo lorem magna nunc mattis maecenas non vestibulum.</p>
                        <a asp-action="Error" asp-controller="Default">
                            Send an application 
                            <i class="fa-regular fa-arrow-right"></i>
                        </a>
                    </div>
               </div>
            </div>
            <div class="contact-form">
                <form method="post" asp-controller="Default" asp-action="Contact">
                    <h2>Get In Contact With Us</h2>

                    <div class="form-content">
                        <div class="input-fullname input-group">
                            <label class="input-label" asp-for="FullName"></label>
                            <input asp-for="FullName" />
                            <span asp-validation-for="FullName"></span>
                        </div>

                        <div class="input-email input-group">
                            <label class="input-label" asp-for="Email"></label>
                            <input asp-for="Email" />
                            <span asp-validation-for="Email"></span>
                        </div>

                        <div class="input-service input-group">
                            <label class="input-label" asp-for="Service"></label>
                            <select asp-for="Service" asp-items="Html.GetEnumSelectList<ServiceOptions>()">
                                <option class="option-placeholder" value="">Choose the service you are interested in</option>
                            </select>
                            <span asp-validation-for="Service"></span>
                        </div>

                        <div class="input-message input-group">
                            <label class="input-label" asp-for="Message"></label>
                            <input asp-for="Message" />
                            <span asp-validation-for="Message"></span>
                        </div>

                        <button class="btn-theme" type="submit">Send Contact Request</button>
                    </div>
                </form>
        </div>





    </div>
   <div id="map" class="map">
        <script>
            (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
                key: "AIzaSyA0cH6bqmVmDRYbheT1drUuFy81g-AGAKA",
                v: "weekly",
            });
        </script>
   </div>
</section>
 <script src="~/js/site.js" defer></script>